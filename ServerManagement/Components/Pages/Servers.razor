@page "/servers"
@inject NavigationManager navigationManager

@rendermode InteractiveServer

<h3>Servers</h3>
<br />

<div class="container-fluid text-center">
    <div class="row w-50">
        @foreach (string city in cities)
        {
            <div class="col">
                <div class="card @(selectedCity.Equals(city, StringComparison.OrdinalIgnoreCase)?"border-primary" : "")">
                    <img src="@($"/images/{city}.png")" class="card-img-top" alt="...">
                    <div class="card-body">
                        <button type="button" class="btn btn-primary" @onclick="@( () => { SelectCity(city); } )">@city</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<br />
<br />

<div class="input-group mb-3">
    <input type="text" class="form-control" placeholder="Search Serves" @bind-value="serverFilter" @bind-value:event="onInput" />
    <button class="btn btn-outline-secondary" type="button" id="button-search" @onclick="HandleSearch">Search</button>

</div>

<br />

<ServerListComponent @rendermode="InteractiveServer" CityName="@this.selectedCity" ></ServerListComponent>

<p>
    <a href="/server/add" class="btn btn-primary">Add</a>
</p>

@* <p>
    <button class="btn btn-secondary" @onclick="@(() => {
            this.servers.Insert(0 , new Server { Name = "ServerA" , City = "Toronto"});
            })">
        Add Server 2
    </button>
</p> *@


@code {
  
    private List<string> cities = CitiesRepository.GetCities();
    private string selectedCity = "Toronto";

    private string _serverFilter = "";
    private string serverFilter
    {
        get => _serverFilter; set
        {
            _serverFilter = value;
            //this.servers = ServersRepository.SearchServers(_serverFilter);
        }

    }

    private void DeleteServer(int id)
    {
        if (id > 0)
        {
            ServersRepository.DeleteServer(id);
            navigationManager.NavigateTo("/servers");
        }
    }

    private void SelectCity(string cityName)
    {
        this.selectedCity = cityName;
        //this.servers = ServersRepository.GetServersByCity(this.selectedCity);

        // if (cityName == "Halifax")
        // {
        //     for (int i = 16; i < 2000; i++)
        //     {
        //         //servers.Add(new Server { ServerId = i, Name = $"Server-{i}", City = "Halifax", IsOnline = true });
        //     }
        // }

    }

    private void HandleSearch()
    {
       // this.servers = ServersRepository.SearchServers(serverFilter);
        this.selectedCity = string.Empty;
    }
}
