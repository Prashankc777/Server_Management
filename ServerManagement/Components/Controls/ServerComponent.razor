@inject NavigationManager navigationManager
@if (Server != null)
{
    <li @key="Server.ServerId">
        @Server.Name  in @Server.City is
        <span style="color:@((Server.IsOnline ? "green" : "red " )) ">
            @(Server.IsOnline ? "Online" : "Offline")
        </span>
        <a href="/servers/@Server.ServerId" class="btn btn-link">Edit</a>
        &nbsp;
        <EditForm Model="Server" FormName="@($"form-server-{Server.ServerId}")" OnValidSubmit="@(() => DeleteServer(Server.ServerId))">
            <button type="submit" class="btn btn-danger">Delete  </button>
        </EditForm>

    </li>

}

@code {


    [Parameter]
    public Server? Server { get; set; }


    // protected override void OnParametersSet()
    // {
    //     server ??= new Server { Name = "Server 1", City = "Toronto" };
    // }

    // private void ChangeServerStatus()
    // {
    //     if (server != null)
    //     {
    //         server.IsOnline = !server.IsOnline;
    //     }
    // }

    private void DeleteServer(int id)
    {
        if (id > 0)
        {
            ServersRepository.DeleteServer(id);
            navigationManager.NavigateTo("/servers", true);
        }
    }

    private void ChangeStatus()
    {
        if (Server != null)
        {
            this.Server.IsOnline = !Server.IsOnline;
        }
    }
}
